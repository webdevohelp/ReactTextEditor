{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","role","onClick","handleMode","htmlFor","defaultProps","aboutText","TextForm","useState","text","setText","Fragment","style","backgroundColor","color","heading","rows","value","onChange","e","target","disabled","length","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","document","getSelection","removeAllRanges","newText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.961c32e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav\r\n                className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n            >\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        {props.title}\r\n                    </a>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div\r\n                        className=\"collapse navbar-collapse\"\r\n                        id=\"navbarSupportedContent\"\r\n                    >\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a\r\n                                    className=\"nav-link active\"\r\n                                    aria-current=\"page\"\r\n                                    href=\"#\"\r\n                                >\r\n                                    Home\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex px-4\">\r\n                            <input\r\n                                className=\"form-control me-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <button\r\n                                className={`btn btn-outline-success text-${\r\n                                    props.mode === 'light' ? 'dark' : 'light'\r\n                                }`}\r\n                                type=\"submit\"\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </form>\r\n                        <div\r\n                            className={`form-check form-switch text-${\r\n                                props.mode === 'light' ? 'dark' : 'light'\r\n                            }`}\r\n                        >\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                role=\"switch\"\r\n                                id=\"flexSwitchCheckDefault\"\r\n                                onClick={props.handleMode}\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"flexSwitchCheckDefault\"\r\n                            >\r\n                                Dark Mode\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Title Please',\r\n    aboutText: 'Default text, please change it!',\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nfunction TextForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const changeHandler = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleUpClick = () => {\r\n        setText(text.toUpperCase());\r\n        props.showAlert('Converted to UpperCase!', 'success');\r\n    };\r\n\r\n    const handleLowClick = () => {\r\n        setText(text.toLowerCase());\r\n        props.showAlert('Converted to LowerCase!', 'success');\r\n    };\r\n\r\n    const handleClearClick = (e) => {\r\n        setText('');\r\n        props.showAlert('TextBox Cleared!', 'success');\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert('Text Copied!', 'success');\r\n    };\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert('Extra spaces removed!', 'success');\r\n    };\r\n\r\n    const handleRemoveSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(''));\r\n        props.showAlert('All spaces removed!', 'success');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"container py-3\"\r\n                style={{\r\n                    backgroundColor:\r\n                        props.mode === 'dark' ? 'rgb(33,37,41)' : 'white',\r\n                    color: props.mode === 'dark' ? 'white' : 'rgb(33,37,41)',\r\n                }}\r\n            >\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label\">\r\n                        Enter your Text below:\r\n                    </label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        id=\"myBox\"\r\n                        rows=\"8\"\r\n                        placeholder=\"Enter your text here...\"\r\n                        value={text}\r\n                        onChange={changeHandler}\r\n                        style={{\r\n                            backgroundColor:\r\n                                props.mode === 'dark'\r\n                                    ? 'rgb(73,77,71)'\r\n                                    : 'white',\r\n                            color:\r\n                                props.mode === 'dark'\r\n                                    ? 'white'\r\n                                    : 'rgb(33,37,41)',\r\n                        }}\r\n                    ></textarea>\r\n                </div>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-primary mx-2 my-2\"\r\n                    onClick={handleUpClick}\r\n                >\r\n                    Convert to Uppercase\r\n                </button>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-primary mx-2 my-2\"\r\n                    onClick={handleLowClick}\r\n                >\r\n                    Convert to Lowercase\r\n                </button>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-danger mx-2 my-2\"\r\n                    onClick={handleClearClick}\r\n                >\r\n                    Clear\r\n                </button>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-primary mx-2 my-2\"\r\n                    onClick={handleCopy}\r\n                >\r\n                    Copy Text\r\n                </button>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-primary mx-2 my-2\"\r\n                    onClick={handleExtraSpaces}\r\n                >\r\n                    Remove Extra Spaces\r\n                </button>\r\n                <button\r\n                    disabled={text.length === 0}\r\n                    className=\"btn btn-primary mx-2 my-2\"\r\n                    onClick={handleRemoveSpaces}\r\n                >\r\n                    Remove All Spaces\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"container my-3 py-3\"\r\n                style={{\r\n                    backgroundColor:\r\n                        props.mode === 'dark' ? 'rgb(33,37,41)' : 'white',\r\n                    color: props.mode === 'dark' ? 'white' : 'rgb(33,37,41)',\r\n                }}\r\n            >\r\n                <h2>Summary:</h2>\r\n                <p>\r\n                    {\r\n                        text\r\n                            .split(/\\s+/)\r\n                            .filter((element) => element.length !== 0).length\r\n                    }{' '}\r\n                    words and {text.length} characters.\r\n                </p>\r\n                <p>Read in {(1 / 125) * text.split(' ').length} minutes</p>\r\n                <h4>Preview:</h4>\r\n                <p>{text.length > 0 ? text : 'Nothing to preview'}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TextForm;\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    };\r\n    return (\r\n        <div style={{ height: '100px' }}>\r\n            {props.alert && (\r\n                <div\r\n                    className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n                    role=\"alert\"\r\n                >\r\n                    <strong>{capitalize(props.alert.type)}</strong>:{' '}\r\n                    {props.alert.msg}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\n\r\nfunction App() {\r\n    const [mode, setMode] = useState('light');\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    const showAlert = (message, type) => {\r\n        setAlert({\r\n            msg: message,\r\n            type: type,\r\n        });\r\n        setTimeout(() => {\r\n            setAlert(null);\r\n        }, 1500);\r\n    };\r\n\r\n    const handleMode = () => {\r\n        if (mode === 'light') {\r\n            setMode('dark');\r\n            document.body.style.backgroundColor = 'rgb(0, 0, 0)';\r\n            showAlert('Dark mode has been enabled', 'success');\r\n        } else {\r\n            setMode('light');\r\n            document.body.style.backgroundColor = 'white';\r\n            showAlert('Light mode has been enabled', 'success');\r\n        }\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar title=\"Text Utils\" mode={mode} handleMode={handleMode} />\r\n            <Alert alert={alert} />\r\n\r\n            <TextForm\r\n                showAlert={showAlert}\r\n                heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"\r\n                mode={mode}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}